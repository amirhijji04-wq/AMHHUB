local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")

local SPEED_BOOST = 150
local normalWalkSpeed = Humanoid.WalkSpeed

-- GUI setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AMHHub"
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 220, 0, 260)
Frame.Position = UDim2.new(0, 10, 0.3, 0)
Frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui
Frame.Active = true
Frame.Draggable = true

local function createButton(text, posY)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 200, 0, 35)
    btn.Position = UDim2.new(0, 10, 0, posY)
    btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    btn.BorderSizePixel = 0
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 18
    btn.Text = text
    btn.Parent = Frame
    return btn
end

local function createStatusLabel(posY)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 200, 0, 20)
    label.Position = UDim2.new(0, 10, 0, posY)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(170, 170, 170)
    label.Font = Enum.Font.SourceSansItalic
    label.TextSize = 14
    label.Text = "OFF"
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = Frame
    return label
end

-- Buttons and labels
local invisibilityBtn = createButton("Toggle Invisibility", 10)
local invisibilityStatus = createStatusLabel(45)

local noclipBtn = createButton("Toggle NoClip", 70)
local noclipStatus = createStatusLabel(105)

local espBtn = createButton("Toggle ESP", 130)
local espStatus = createStatusLabel(165)

local speedBtn = createButton("Toggle Speed Boost", 190)
local speedStatus = createStatusLabel(225)

local infJumpBtn = createButton("Toggle Infinite Jump", 250)
local infJumpStatus = createStatusLabel(285)

-- State variables
local invisibilityOn = false
local noclipOn = false
local espOn = false
local speedOn = false
local infJumpOn = false

-- Invisibility function
local function setInvisibility(state)
    local char = LocalPlayer.Character
    if not char then return end
    for _, part in pairs(char:GetChildren()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            part.Transparency = state and 1 or 0
            -- Also make decals invisible if any
            for _, decal in pairs(part:GetChildren()) do
                if decal:IsA("Decal") or decal:IsA("Texture") then
                    decal.Transparency = state and 1 or 0
                end
            end
        elseif part:IsA("Accessory") and part:FindFirstChild("Handle") then
            part.Handle.Transparency = state and 1 or 0
        end
    end
end

invisibilityBtn.MouseButton1Click:Connect(function()
    invisibilityOn = not invisibilityOn
    invisibilityStatus.Text = invisibilityOn and "ON" or "OFF"
    setInvisibility(invisibilityOn)
end)

-- NoClip function
noclipBtn.MouseButton1Click:Connect(function()
    noclipOn = not noclipOn
    noclipStatus.Text = noclipOn and "ON" or "OFF"
end)

RunService.Stepped:Connect(function()
    if noclipOn then
        local char = LocalPlayer.Character
        if char then
            for _, part in pairs(char:GetChildren()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
    end
end)

-- ESP implementation
local espBoxes = {}

local function createEspBillboard(player)
    if espBoxes[player] then return end
    local char = player.Character
    if not char then return end
    local head = char:FindFirstChild("Head")
    if not head then return end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESPBillboard"
    billboard.Adornee = head
    billboard.Size = UDim2.new(0, 100, 0, 30)
    billboard.StudsOffset = Vector3.new(0, 2, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = head

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.new(1, 1, 0)
    textLabel.Font = Enum.Font.ArialBold
    textLabel.TextStrokeTransparency = 0.5
    textLabel.TextScaled = true
    textLabel.Text = player.Name
    textLabel.Parent = billboard

    espBoxes[player] = billboard
end

local function removeEspBillboard(player)
    if espBoxes[player] then
        espBoxes[player]:Destroy()
        espBoxes[player] = nil
    end
end

local function updateEsp()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            if espOn then
                createEspBillboard(player)
            else
                removeEspBillboard(player)
            end
        end
    end
end

espBtn.MouseButton1Click:Connect(function()
    espOn = not espOn
    espStatus.Text = espOn and "ON" or "OFF"
    updateEsp()
end)

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        wait(1)
        if espOn then
            createEspBillboard(player)
        end
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    removeEspBillboard(player)
end)

-- Speed boost fix
speedBtn.MouseButton1Click:Connect(function()
    speedOn = not speedOn
    if speedOn then
        if Humanoid and Humanoid.Parent then
            Humanoid.WalkSpeed = SPEED_BOOST
        end
    else
        if Humanoid and Humanoid.Parent then
            Humanoid.WalkSpeed = normalWalkSpeed
        end
    end
    speedStatus.Text = speedOn and "ON" or "OFF"
end)

-- Infinite jump
infJumpBtn.MouseButton1Click:Connect(function()
    infJumpOn = not infJumpOn
    infJumpStatus.Text = infJumpOn and "ON" or "OFF"
end)

UserInputService.JumpRequest:Connect(function()
    if infJumpOn and Humanoid and Humanoid.Parent then
        Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

-- Character respawn handling
LocalPlayer.CharacterAdded:Connect(function(char)
    Character = char
    Humanoid = char:WaitForChild("Humanoid")
    normalWalkSpeed = Humanoid.WalkSpeed

    if speedOn then
        Humanoid.WalkSpeed = SPEED_BOOST
    else
        Humanoid.WalkSpeed = normalWalkSpeed
    end

    if invisibilityOn then
        setInvisibility(true)
    else
        setInvisibility(false)
    end
end)
